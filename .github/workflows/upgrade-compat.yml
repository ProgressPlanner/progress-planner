name: Progress Planner Update & Compatibility Tests

env:
  WORDPRESS_URL: http://localhost:8080
  WORDPRESS_ADMIN_USER: admin
  WORDPRESS_ADMIN_PASSWORD: password
  WORDPRESS_ADMIN_EMAIL: admin@example.com
  WORDPRESS_TABLE_PREFIX: wp_
  WORDPRESS_DB_USER: wpuser
  WORDPRESS_DB_PASSWORD: wppass
  WORDPRESS_DB_NAME: wordpress
  WORDPRESS_DB_PORT: 3307
  PLUGIN_REPO: ProgressPlanner/progress-planner
  YOAST_TOKEN: ${{ secrets.YOAST_TOKEN }}

on:
  push:
    branches:
      - develop
  pull_request:
  # Allow manually triggering the workflow.
  workflow_dispatch:

jobs:
  upgrade-compat:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mariadb:10.6
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ${{ env.WORDPRESS_DB_NAME }}
          MYSQL_USER: ${{ env.WORDPRESS_DB_USER }}
          MYSQL_PASSWORD: ${{ env.WORDPRESS_DB_PASSWORD }}
        ports:
          - 3307:3306

      wordpress:
        image: wordpress:latest
        env:
          WORDPRESS_DB_HOST: mysql
          WORDPRESS_DB_USER: ${{ env.WORDPRESS_DB_USER }}
          WORDPRESS_DB_PASSWORD: ${{ env.WORDPRESS_DB_PASSWORD }}
          WORDPRESS_DB_NAME: ${{ env.WORDPRESS_DB_NAME }}
          WORDPRESS_DB_PORT: ${{ env.WORDPRESS_DB_PORT }}
          WORDPRESS_TABLE_PREFIX: ${{ env.WORDPRESS_TABLE_PREFIX }}
          WORDPRESS_DEBUG: 1
          WORDPRESS_URL: ${{ env.WORDPRESS_URL }}
          WORDPRESS_ADMIN_USER: ${{ env.WORDPRESS_ADMIN_USER }}
          WORDPRESS_ADMIN_PASSWORD: ${{ env.WORDPRESS_ADMIN_PASSWORD }}
          WORDPRESS_ADMIN_EMAIL: ${{ env.WORDPRESS_ADMIN_EMAIL }}
        ports:
          - 8080:80
        options: >-
          --health-cmd="curl --silent --fail http://localhost:8080/wp-login.php || exit 0"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install system dependencies (host)
        run: |
          sudo apt-get update
          sudo apt-get install -y git curl unzip

      - name: Complete WordPress installation
        run: |
          echo "Installing WordPress at: $WORDPRESS_URL"
          curl --silent -X POST "$WORDPRESS_URL/wp-admin/install.php?step=2" \
          -d "weblog_title=My%20WordPress%20Site" \
          -d "user_name=$WORDPRESS_ADMIN_USER" \
          -d "admin_password=$WORDPRESS_ADMIN_PASSWORD" \
          -d "admin_password2=$WORDPRESS_ADMIN_PASSWORD" \
          -d "admin_email=$WORDPRESS_ADMIN_EMAIL" \
          -d "public=1"

      - name: Setup WordPress container (tools + plugin)
        run: |
          WP_CONTAINER=$(docker ps -qf "name=wordpress")

          echo "Installing packages in WordPress container..."

          docker exec $WP_CONTAINER apt-get update
          docker exec $WP_CONTAINER apt-get install -y lsb-release apt-transport-https ca-certificates gnupg wget curl unzip git

          docker exec $WP_CONTAINER bash -c "curl -fsSL https://packages.sury.org/php/apt.gpg | gpg --dearmor -o /usr/share/keyrings/sury.gpg"
          docker exec $WP_CONTAINER bash -c "echo 'deb [signed-by=/usr/share/keyrings/sury.gpg] https://packages.sury.org/php/ $(lsb_release -sc) main' > /etc/apt/sources.list.d/sury.list"

          docker exec $WP_CONTAINER apt-get update
          docker exec $WP_CONTAINER apt-get install -y php8.2-cli php8.2-curl php8.2-mbstring php8.2-xml php8.2-zip

          # Install WP-CLI
          docker exec $WP_CONTAINER curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          docker exec $WP_CONTAINER chmod +x wp-cli.phar
          docker exec $WP_CONTAINER mv wp-cli.phar /usr/local/bin/wp

          # Setup plugin
          docker exec $WP_CONTAINER mkdir -p /var/www/html/wp-content/plugins
          docker exec $WP_CONTAINER git clone --branch v1.1.0 https://github.com/${PLUGIN_REPO}.git /var/www/html/wp-content/plugins/progress-planner

          docker exec $WP_CONTAINER wp plugin activate progress-planner --allow-root
          docker exec $WP_CONTAINER wp option get progress_planner_settings --allow-root

          docker cp . $WP_CONTAINER:/var/www/html/wp-content/plugins/progress-planner
          docker exec $WP_CONTAINER wp option get progress_planner_settings --allow-root

          docker exec $WP_CONTAINER wp plugin install wordpress-seo --activate --allow-root
          docker exec $WP_CONTAINER wp plugin install yoast-comment-hacks --activate --allow-root

          # Composer & Yoast Premium setup
          docker exec $WP_CONTAINER curl -sS https://getcomposer.org/installer -o composer-setup.php
          docker exec $WP_CONTAINER php composer-setup.php --install-dir=/usr/local/bin --filename=composer

          docker exec $WP_CONTAINER composer config -g http-basic.my.yoast.com token $YOAST_TOKEN
          docker exec $WP_CONTAINER composer config repositories.my-yoast composer https://my.yoast.com/packages/
          docker exec $WP_CONTAINER composer require yoast/wordpress-seo-premium

          docker exec $WP_CONTAINER wp plugin activate wordpress-seo-premium --allow-root

          docker exec $WP_CONTAINER wp option get progress_planner_settings --allow-root
